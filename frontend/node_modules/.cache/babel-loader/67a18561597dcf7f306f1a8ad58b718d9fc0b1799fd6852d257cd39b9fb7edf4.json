{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fundedprime\\\\frontend\\\\src\\\\components\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Nav, NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get('http://localhost/fundedprime/wp-json/menus/v1/menus/header_menu').then(response => {\n      const menuTree = buildMenuTree(response.data);\n      setMenuItems(menuTree);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching menu:', error);\n      setLoading(false);\n    });\n  }, []);\n  const buildMenuTree = items => {\n    const menuMap = {};\n    const menuTree = [];\n\n    // Map items by their ID\n    items.forEach(item => {\n      menuMap[item.id] = {\n        ...item,\n        children: []\n      };\n    });\n\n    // Build the tree structure\n    items.forEach(item => {\n      if (item.menu_item_parent === 0) {\n        // Top-level item\n        menuTree.push(menuMap[item.id]);\n      } else {\n        // Child item\n        const parent = menuMap[item.menu_item_parent];\n        if (parent) {\n          parent.children.push(menuMap[item.id]);\n        }\n      }\n    });\n    return menuTree;\n  };\n  const renderMenuItems = items => {\n    return items.map(item => {\n      if (item.children.length > 0) {\n        // Render parent with dropdown for children\n        return /*#__PURE__*/_jsxDEV(NavDropdown, {\n          title: item.title,\n          id: `navbarDropdown${item.id}`,\n          children: renderMenuItems(item.children)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      }\n\n      // Render single menu item\n      return /*#__PURE__*/_jsxDEV(Nav.Item, {\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: item.url,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading menu...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    children: renderMenuItems(menuItems)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"mr1uE5k0E235ydyyo5EYRQn/82w=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","axios","Nav","NavDropdown","jsxDEV","_jsxDEV","Menu","_s","menuItems","setMenuItems","loading","setLoading","get","then","response","menuTree","buildMenuTree","data","catch","error","console","items","menuMap","forEach","item","id","children","menu_item_parent","push","parent","renderMenuItems","map","length","title","fileName","_jsxFileName","lineNumber","columnNumber","Item","Link","href","url","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fundedprime/frontend/src/components/Menu.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Nav, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost/fundedprime/wp-json/menus/v1/menus/header_menu')\r\n      .then(response => {\r\n        const menuTree = buildMenuTree(response.data);\r\n        setMenuItems(menuTree);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching menu:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const buildMenuTree = (items) => {\r\n    const menuMap = {};\r\n    const menuTree = [];\r\n\r\n    // Map items by their ID\r\n    items.forEach(item => {\r\n      menuMap[item.id] = { ...item, children: [] };\r\n    });\r\n\r\n    // Build the tree structure\r\n    items.forEach(item => {\r\n      if (item.menu_item_parent === 0) {\r\n        // Top-level item\r\n        menuTree.push(menuMap[item.id]);\r\n      } else {\r\n        // Child item\r\n        const parent = menuMap[item.menu_item_parent];\r\n        if (parent) {\r\n          parent.children.push(menuMap[item.id]);\r\n        }\r\n      }\r\n    });\r\n\r\n    return menuTree;\r\n  };\r\n\r\n  const renderMenuItems = (items) => {\r\n    return items.map(item => {\r\n      if (item.children.length > 0) {\r\n        // Render parent with dropdown for children\r\n        return (\r\n          <NavDropdown key={item.id} title={item.title} id={`navbarDropdown${item.id}`}>\r\n            {renderMenuItems(item.children)}\r\n          </NavDropdown>\r\n        );\r\n      }\r\n\r\n      // Render single menu item\r\n      return (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link href={item.url}>{item.title}</Nav.Link>\r\n        </Nav.Item>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading menu...</p>;\r\n  }\r\n\r\n  return (\r\n    <Nav>\r\n      {renderMenuItems(menuItems)}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}