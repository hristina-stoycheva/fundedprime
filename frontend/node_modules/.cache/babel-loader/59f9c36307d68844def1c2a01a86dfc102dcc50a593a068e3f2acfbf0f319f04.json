{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import Menu from\"./Menu\";import\"./styles/Header.css\";import{fetchACFData}from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Header=()=>{const[acfData,setAcfData]=useState({});const[buttons,setButtons]=useState({});// Fetch ACF data when the component mounts\nuseEffect(()=>{const getACFData=async()=>{const data=await fetchACFData();// Fetch the ACF data\nsetAcfData(data.navigation);// Update the state with the fetched ACF data\n};getACFData();// Call the function to fetch data\nconst getButtons=async()=>{var _data$navigation;const data=await fetchACFData();// Fetch the ACF data\nif(data!==null&&data!==void 0&&(_data$navigation=data.navigation)!==null&&_data$navigation!==void 0&&_data$navigation.buttons){setButtons(data.navigation.buttons);}};getButtons();// Call the function to fetch data\n},[]);// Empty dependency array means this effect runs only once when the component mounts\nconst buttonArray=Object.values(buttons);// console.log(buttonArray);\nreturn/*#__PURE__*/_jsx(\"nav\",{className:\"navbar navbar-expand-lg navbar-light\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"navbar-brand col-2 header-logo\",href:\"/\",children:acfData.logo&&acfData.logo.url&&/*#__PURE__*/_jsx(\"img\",{src:acfData.logo.url// Use the image URL from ACF\n,alt:\"Brand Logo\",className:\"d-inline-block align-top \",style:{height:\"34px\"}})}),/*#__PURE__*/_jsx(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#navbarNav\",\"aria-controls\":\"navbarNav\",\"aria-expanded\":\"false\",\"aria-label\":\"Toggle navigation\",children:/*#__PURE__*/_jsx(\"span\",{className:\"navbar-toggler-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"collapse navbar-collapse col-7 justify-content-center\",id:\"navbarNav\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"navbar-nav\",children:/*#__PURE__*/_jsx(Menu,{})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3 buttons-in-right text-end\",children:Object.entries(buttons).map(_ref=>{let[key,button]=_ref;return/*#__PURE__*/_jsx(\"a\",{href:button.url,className:\"funded-btn \".concat(key===\"0\"?\"funded-white-btn\":\"funded-black-btn ms-2\"),children:button.label},key);})})]})});};export default Header;","map":{"version":3,"names":["React","useEffect","useState","Link","Menu","fetchACFData","jsx","_jsx","jsxs","_jsxs","Header","acfData","setAcfData","buttons","setButtons","getACFData","data","navigation","getButtons","_data$navigation","buttonArray","Object","values","className","children","href","logo","url","src","alt","style","height","type","id","entries","map","_ref","key","button","concat","label"],"sources":["C:/xampp/htdocs/fundedprime/frontend/src/components/Header.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport \"./styles/Header.css\";\r\nimport { fetchACFData } from \"../api\";\r\n\r\nconst Header = () => {\r\n  const [acfData, setAcfData] = useState({});\r\n  const [buttons, setButtons] = useState({});\r\n\r\n  // Fetch ACF data when the component mounts\r\n  useEffect(() => {\r\n    const getACFData = async () => {\r\n      const data = await fetchACFData(); // Fetch the ACF data\r\n      setAcfData(data.navigation); // Update the state with the fetched ACF data\r\n    };\r\n    getACFData(); // Call the function to fetch data\r\n    const getButtons = async () => {\r\n      const data = await fetchACFData(); // Fetch the ACF data\r\n      if (data?.navigation?.buttons) {\r\n        setButtons(data.navigation.buttons);\r\n      }\r\n    };\r\n    getButtons(); // Call the function to fetch data\r\n  }, []); // Empty dependency array means this effect runs only once when the component mounts\r\n  const buttonArray = Object.values(buttons);\r\n  // console.log(buttonArray);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand col-2 header-logo\" href=\"/\">\r\n          {acfData.logo && acfData.logo.url && (\r\n            <img\r\n              src={acfData.logo.url} // Use the image URL from ACF\r\n              alt=\"Brand Logo\"\r\n              className=\"d-inline-block align-top \"\r\n              style={{ height: \"34px\" }}\r\n            />\r\n          )}\r\n        </a>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse col-7 justify-content-center\"\r\n          id=\"navbarNav\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <Menu />\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-3 buttons-in-right text-end\">\r\n          {Object.entries(buttons).map(([key, button]) => (\r\n            <a\r\n              key={key}\r\n              href={button.url}\r\n              className={`funded-btn ${\r\n                key === \"0\" ? \"funded-white-btn\" : \"funded-black-btn ms-2\"\r\n              }`}\r\n            >\r\n              {button.label}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Header;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,qBAAqB,CAC5B,OAASC,YAAY,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE1C;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAX,YAAY,CAAC,CAAC,CAAE;AACnCO,UAAU,CAACI,IAAI,CAACC,UAAU,CAAC,CAAE;AAC/B,CAAC,CACDF,UAAU,CAAC,CAAC,CAAE;AACd,KAAM,CAAAG,UAAU,CAAG,KAAAA,CAAA,GAAY,KAAAC,gBAAA,CAC7B,KAAM,CAAAH,IAAI,CAAG,KAAM,CAAAX,YAAY,CAAC,CAAC,CAAE;AACnC,GAAIW,IAAI,SAAJA,IAAI,YAAAG,gBAAA,CAAJH,IAAI,CAAEC,UAAU,UAAAE,gBAAA,WAAhBA,gBAAA,CAAkBN,OAAO,CAAE,CAC7BC,UAAU,CAACE,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC,CACrC,CACF,CAAC,CACDK,UAAU,CAAC,CAAC,CAAE;AAChB,CAAC,CAAE,EAAE,CAAC,CAAE;AACR,KAAM,CAAAE,WAAW,CAAGC,MAAM,CAACC,MAAM,CAACT,OAAO,CAAC,CAC1C;AAEA,mBACEN,IAAA,QAAKgB,SAAS,CAAC,sCAAsC,CAAAC,QAAA,cACnDf,KAAA,QAAKc,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBjB,IAAA,MAAGgB,SAAS,CAAC,gCAAgC,CAACE,IAAI,CAAC,GAAG,CAAAD,QAAA,CACnDb,OAAO,CAACe,IAAI,EAAIf,OAAO,CAACe,IAAI,CAACC,GAAG,eAC/BpB,IAAA,QACEqB,GAAG,CAAEjB,OAAO,CAACe,IAAI,CAACC,GAAK;AAAA,CACvBE,GAAG,CAAC,YAAY,CAChBN,SAAS,CAAC,2BAA2B,CACrCO,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAC3B,CACF,CACA,CAAC,cAEJxB,IAAA,WACEgB,SAAS,CAAC,gBAAgB,CAC1BS,IAAI,CAAC,QAAQ,CACb,iBAAe,UAAU,CACzB,iBAAe,YAAY,CAC3B,gBAAc,WAAW,CACzB,gBAAc,OAAO,CACrB,aAAW,mBAAmB,CAAAR,QAAA,cAE9BjB,IAAA,SAAMgB,SAAS,CAAC,qBAAqB,CAAO,CAAC,CACvC,CAAC,cACThB,IAAA,QACEgB,SAAS,CAAC,uDAAuD,CACjEU,EAAE,CAAC,WAAW,CAAAT,QAAA,cAEdjB,IAAA,OAAIgB,SAAS,CAAC,YAAY,CAAAC,QAAA,cACxBjB,IAAA,CAACH,IAAI,GAAE,CAAC,CACN,CAAC,CACF,CAAC,cACNG,IAAA,QAAKgB,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAC7CH,MAAM,CAACa,OAAO,CAACrB,OAAO,CAAC,CAACsB,GAAG,CAACC,IAAA,MAAC,CAACC,GAAG,CAAEC,MAAM,CAAC,CAAAF,IAAA,oBACzC7B,IAAA,MAEEkB,IAAI,CAAEa,MAAM,CAACX,GAAI,CACjBJ,SAAS,eAAAgB,MAAA,CACPF,GAAG,GAAK,GAAG,CAAG,kBAAkB,CAAG,uBAAuB,CACzD,CAAAb,QAAA,CAEFc,MAAM,CAACE,KAAK,EANRH,GAOJ,CAAC,EACL,CAAC,CACC,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CACD,cAAe,CAAA3B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}