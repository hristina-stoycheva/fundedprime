{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fundedprime\\\\frontend\\\\src\\\\components\\\\DropdownMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dropdown, NavDropdown } from 'react-bootstrap';\nimport fetchMenu from './fetchMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownMenu = ({\n  menuSlug\n}) => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    const getMenuItems = async () => {\n      const items = await fetchMenu(menuSlug);\n      console.log(items); // Check the response structure here\n      setMenuItems(items || []); // Use a fallback to ensure `menuItems` is always an array\n    };\n    getMenuItems();\n  }, [menuSlug]);\n  const renderMenuItems = items => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: item.child_items ? /*#__PURE__*/_jsxDEV(NavDropdown, {\n        title: item.title,\n        id: `submenu-${item.ID}`,\n        children: renderMenuItems(item.child_items)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: item.url,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, item.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"primary\",\n      id: \"dropdown-basic\",\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: renderMenuItems(menuItems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DropdownMenu, \"aerj4MrH8qL8Ldj4pa1rYEuE5iM=\");\n_c = DropdownMenu;\nexport default DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","NavDropdown","fetchMenu","jsxDEV","_jsxDEV","DropdownMenu","menuSlug","_s","menuItems","setMenuItems","getMenuItems","items","console","log","renderMenuItems","map","item","Fragment","children","child_items","title","id","ID","fileName","_jsxFileName","lineNumber","columnNumber","Item","href","url","Toggle","variant","Menu","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fundedprime/frontend/src/components/DropdownMenu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, NavDropdown } from 'react-bootstrap';\r\nimport fetchMenu from './fetchMenu';\r\n\r\nconst DropdownMenu = ({ menuSlug }) => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMenuItems = async () => {\r\n      const items = await fetchMenu(menuSlug);\r\n      console.log(items); // Check the response structure here\r\n      setMenuItems(items || []); // Use a fallback to ensure `menuItems` is always an array\r\n    };\r\n    getMenuItems();\r\n  }, [menuSlug]);\r\n\r\n  const renderMenuItems = (items) => {\r\n    return items.map((item) => (\r\n      <React.Fragment key={item.ID}>\r\n        {item.child_items ? (\r\n          <NavDropdown title={item.title} id={`submenu-${item.ID}`}>\r\n            {renderMenuItems(item.child_items)}\r\n          </NavDropdown>\r\n        ) : (\r\n          <Dropdown.Item href={item.url}>{item.title}</Dropdown.Item>\r\n        )}\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n        Menu\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>{renderMenuItems(menuItems)}</Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,iBAAiB;AACvD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAG,MAAMT,SAAS,CAACI,QAAQ,CAAC;MACvCM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC;MACpBF,YAAY,CAACE,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IACDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMQ,eAAe,GAAIH,KAAK,IAAK;IACjC,OAAOA,KAAK,CAACI,GAAG,CAAEC,IAAI,iBACpBZ,OAAA,CAACP,KAAK,CAACoB,QAAQ;MAAAC,QAAA,EACZF,IAAI,CAACG,WAAW,gBACff,OAAA,CAACH,WAAW;QAACmB,KAAK,EAAEJ,IAAI,CAACI,KAAM;QAACC,EAAE,EAAE,WAAWL,IAAI,CAACM,EAAE,EAAG;QAAAJ,QAAA,EACtDJ,eAAe,CAACE,IAAI,CAACG,WAAW;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,gBAEdtB,OAAA,CAACJ,QAAQ,CAAC2B,IAAI;QAACC,IAAI,EAAEZ,IAAI,CAACa,GAAI;QAAAX,QAAA,EAAEF,IAAI,CAACI;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB;IAC3D,GAPkBV,IAAI,CAACM,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACjB,CAAC;EACJ,CAAC;EAED,oBACEtB,OAAA,CAACJ,QAAQ;IAAAkB,QAAA,gBACPd,OAAA,CAACJ,QAAQ,CAAC8B,MAAM;MAACC,OAAO,EAAC,SAAS;MAACV,EAAE,EAAC,gBAAgB;MAAAH,QAAA,EAAC;IAEvD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eAClBtB,OAAA,CAACJ,QAAQ,CAACgC,IAAI;MAAAd,QAAA,EAAEJ,eAAe,CAACN,SAAS;IAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEf,CAAC;AAACnB,EAAA,CAlCIF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}