{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fundedprime\\\\frontend\\\\src\\\\components\\\\Footer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Menu from \"./Menu\";\nimport FooterMenu from \"./FooterMenu\";\nimport \"./styles/Footer.css\";\nimport { fetchACFData } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = () => {\n  _s();\n  const [acfData, setAcfData] = useState({});\n  // Fetch ACF data when the component mounts\n  useEffect(() => {\n    const getACFData = async () => {\n      const data = await fetchACFData(); // Fetch the ACF data\n      setAcfData(data.footer); // Update the state with the fetched ACF data\n    };\n    getACFData(); // Call the function to fetch data\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section_footer pb-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer_top_line row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-8 menu_topline_footer\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 footer_top_right\",\n          children: [acfData.logo && acfData.logo.url && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: acfData.logo.url // Use the image URL from ACF\n            ,\n            alt: \"Brand Logo\",\n            className: \"d-inline-block align-top \",\n            style: {\n              height: \"34px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer_top_text\",\n            children: acfData.footer_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer_top_line row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer_bottom_menu\",\n          children: /*#__PURE__*/_jsxDEV(FooterMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer_bottom_text\",\n          children: acfData.footer_bottom_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Footer, \"vASmCcvyNMIfVulOy2d9Lj6vK5A=\");\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useEffect","useState","Menu","FooterMenu","fetchACFData","jsxDEV","_jsxDEV","Footer","_s","acfData","setAcfData","getACFData","data","footer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","logo","url","src","alt","style","height","footer_email","footer_bottom_text","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fundedprime/frontend/src/components/Footer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport FooterMenu from \"./FooterMenu\";\r\nimport \"./styles/Footer.css\";\r\nimport { fetchACFData } from \"../api\";\r\nconst Footer = () => {\r\n  const [acfData, setAcfData] = useState({});\r\n  // Fetch ACF data when the component mounts\r\n  useEffect(() => {\r\n    const getACFData = async () => {\r\n      const data = await fetchACFData(); // Fetch the ACF data\r\n      setAcfData(data.footer); // Update the state with the fetched ACF data\r\n    };\r\n    getACFData(); // Call the function to fetch data\r\n  }, []);\r\n  return (\r\n    <div className=\"section_footer pb-5\">\r\n      <div className=\"footer container\">\r\n        <div className=\"footer_top_line row\">\r\n          <div className=\"col-8 menu_topline_footer\">\r\n            <Menu />\r\n          </div>\r\n          <div className=\"col-4 footer_top_right\">\r\n            {acfData.logo && acfData.logo.url && (\r\n              <img\r\n                src={acfData.logo.url} // Use the image URL from ACF\r\n                alt=\"Brand Logo\"\r\n                className=\"d-inline-block align-top \"\r\n                style={{ height: \"34px\" }}\r\n              />\r\n            )}\r\n            <div className=\"footer_top_text\">{acfData.footer_email}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer_top_line row\">\r\n          <div className=\"footer_bottom_menu\">\r\n            <FooterMenu />\r\n          </div>\r\n          <div className=\"footer_bottom_text\">{acfData.footer_bottom_text}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}