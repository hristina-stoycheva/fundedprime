{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fundedprime\\\\frontend\\\\src\\\\components\\\\template-parts\\\\TextLeftImageRight.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextLeftImageRight = ({\n  title,\n  text,\n  imageUrl,\n  imgPosition,\n  bgColor\n}) => {\n  const rowClass = bgColor ? `row bg-${bgColor}` : \"row\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section pt-5 pb-5\",\n    style: {\n      backgroundColor: bgColor || \"inherit\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: rowClass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textcolumn col-7\",\n          children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ir_text\",\n            dangerouslySetInnerHTML: {\n              __html: text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imagecolumn col-5\",\n          children: imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imageRight\",\n            src: imageUrl,\n            alt: \"Section visual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n_c = TextLeftImageRight;\nexport default TextLeftImageRight;\nvar _c;\n$RefreshReg$(_c, \"TextLeftImageRight\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TextLeftImageRight","title","text","imageUrl","imgPosition","bgColor","rowClass","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","src","alt","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fundedprime/frontend/src/components/template-parts/TextLeftImageRight.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst TextLeftImageRight = ({ title, text, imageUrl, imgPosition, bgColor }) => {\r\n  const rowClass = bgColor ? `row bg-${bgColor}` : \"row\";\r\n  return(\r\n  <div className=\"section pt-5 pb-5\" style={{ backgroundColor: bgColor || \"inherit\" }}>\r\n    <div className=\"container\">\r\n      <div className={rowClass}>\r\n        <div className=\"textcolumn col-7\">\r\n          {/* Conditionally render title if it's not empty */}\r\n          {title && <h2>{title}</h2>}\r\n          \r\n          {/* Conditionally render text if it's not empty */}\r\n          {text && <div className=\"ir_text\" dangerouslySetInnerHTML={{ __html: text }} />}\r\n        </div>\r\n\r\n        <div className=\"imagecolumn col-5\">\r\n          {/* Conditionally render image if imageUrl is not empty */}\r\n          {imageUrl && <img className=\"imageRight\" src={imageUrl} alt=\"Section visual\" />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default TextLeftImageRight;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAQ,CAAC,KAAK;EAC9E,MAAMC,QAAQ,GAAGD,OAAO,GAAG,UAAUA,OAAO,EAAE,GAAG,KAAK;EACtD,oBACAN,OAAA;IAAKQ,SAAS,EAAC,mBAAmB;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAEJ,OAAO,IAAI;IAAU,CAAE;IAAAK,QAAA,eAClFX,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAG,QAAA,eACxBX,OAAA;QAAKQ,SAAS,EAAED,QAAS;QAAAI,QAAA,gBACvBX,OAAA;UAAKQ,SAAS,EAAC,kBAAkB;UAAAG,QAAA,GAE9BT,KAAK,iBAAIF,OAAA;YAAAW,QAAA,EAAKT;UAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAGzBZ,IAAI,iBAAIH,OAAA;YAAKQ,SAAS,EAAC,SAAS;YAACQ,uBAAuB,EAAE;cAAEC,MAAM,EAAEd;YAAK;UAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,eAENf,OAAA;UAAKQ,SAAS,EAAC,mBAAmB;UAAAG,QAAA,EAE/BP,QAAQ,iBAAIJ,OAAA;YAAKQ,SAAS,EAAC,YAAY;YAACU,GAAG,EAAEd,QAAS;YAACe,GAAG,EAAC;UAAgB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAACK,EAAA,GAtBInB,kBAAkB;AAwBxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}