{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fundedprime\\\\frontend\\\\src\\\\templates\\\\DefaultTemplate.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../components/styles/style.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_SECTION } from \"../apollo/queries\";\nimport VideoHeader from \"../components/template-parts/VideoHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefaultTemplate = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const currentSlug = slug || \"404\";\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_SECTION, {\n    variables: {\n      slug: currentSlug\n    }\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  const sections = data.pageBy.sections;\n  // console.log(sections);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sections.section.map((section, index) => {\n      var _section$selectSectio;\n      let content;\n\n      // Switch based on the first value of `section.selectSection`\n      const selectedValue = (_section$selectSectio = section.selectSection) === null || _section$selectSectio === void 0 ? void 0 : _section$selectSectio[0];\n      switch (selectedValue) {\n        case \"video_header\":\n          const videoHeaderData = section.videoHeader;\n          content = /*#__PURE__*/_jsxDEV(VideoHeader, {\n            title: videoHeaderData.title,\n            buttonsa: videoHeaderData.buttons,\n            text: videoHeaderData.text,\n            videourl: videoHeaderData.video.node.mediaItemUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this);\n          break;\n        case \"text_img_columns\":\n          const textAndImageInColumns = section.textAndImageInColumns;\n          console.log(textAndImageInColumns);\n          content = /*#__PURE__*/_jsxDEV(TextLeftImageRight, {\n            text: textAndImageInColumns.text,\n            imageUrl: textRightImage.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n          break;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(DefaultTemplate, \"bDHUOOVV2fzIJ5LCEmIhOTn6i/A=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = DefaultTemplate;\nexport default DefaultTemplate;\nvar _c;\n$RefreshReg$(_c, \"DefaultTemplate\");","map":{"version":3,"names":["React","useParams","useQuery","GET_SECTION","VideoHeader","jsxDEV","_jsxDEV","DefaultTemplate","_s","slug","currentSlug","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","sections","pageBy","section","map","index","_section$selectSectio","content","selectedValue","selectSection","videoHeaderData","videoHeader","title","buttonsa","buttons","text","videourl","video","node","mediaItemUrl","textAndImageInColumns","console","log","TextLeftImageRight","imageUrl","textRightImage","style","marginBottom","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/fundedprime/frontend/src/templates/DefaultTemplate.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../components/styles/style.css\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_SECTION } from \"../apollo/queries\";\r\nimport VideoHeader from \"../components/template-parts/VideoHeader\";\r\n\r\nconst DefaultTemplate = () => {\r\n  const { slug } = useParams();\r\n  const currentSlug = slug || \"404\";\r\n\r\n  const { loading, error, data } = useQuery(GET_SECTION, {\r\n    variables: { slug: currentSlug },\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    return <div>Error loading data: {error.message}</div>;\r\n  }\r\n\r\n  const sections = data.pageBy.sections;\r\n  // console.log(sections);\r\n\r\n  return (\r\n    <div>\r\n      {sections.section.map((section, index) => {\r\n        let content;\r\n\r\n        // Switch based on the first value of `section.selectSection`\r\n        const selectedValue = section.selectSection?.[0];\r\n        switch (selectedValue) {\r\n          case \"video_header\":\r\n            const videoHeaderData = section.videoHeader;\r\n\r\n            content = (\r\n              <VideoHeader\r\n                title={videoHeaderData.title}\r\n                buttonsa={videoHeaderData.buttons}\r\n                text={videoHeaderData.text}\r\n                videourl={videoHeaderData.video.node.mediaItemUrl}\r\n              />\r\n            );\r\n            break;\r\n          case \"text_img_columns\":\r\n            const textAndImageInColumns = section.textAndImageInColumns;\r\n            console.log(textAndImageInColumns);\r\n\r\n            content = (\r\n              <TextLeftImageRight text={textAndImageInColumns.text} imageUrl={textRightImage.title} />\r\n            );\r\n            break;\r\n        }\r\n\r\n        return (\r\n          <div key={index} style={{ marginBottom: \"20px\" }}>\r\n            {/* <h2>Section {index + 1}</h2> */}\r\n            {content}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DefaultTemplate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,gCAAgC;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC5B,MAAMS,WAAW,GAAGD,IAAI,IAAI,KAAK;EAEjC,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACC,WAAW,EAAE;IACrDW,SAAS,EAAE;MAAEL,IAAI,EAAEC;IAAY;EACjC,CAAC,CAAC;EAEF,IAAIC,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACA,IAAIP,KAAK,EAAE;IACT,oBAAON,OAAA;MAAAS,QAAA,GAAK,sBAAoB,EAACH,KAAK,CAACQ,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACvD;EAEA,MAAME,QAAQ,GAAGR,IAAI,CAACS,MAAM,CAACD,QAAQ;EACrC;;EAEA,oBACEf,OAAA;IAAAS,QAAA,EACGM,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,CAACD,OAAO,EAAEE,KAAK,KAAK;MAAA,IAAAC,qBAAA;MACxC,IAAIC,OAAO;;MAEX;MACA,MAAMC,aAAa,IAAAF,qBAAA,GAAGH,OAAO,CAACM,aAAa,cAAAH,qBAAA,uBAArBA,qBAAA,CAAwB,CAAC,CAAC;MAChD,QAAQE,aAAa;QACnB,KAAK,cAAc;UACjB,MAAME,eAAe,GAAGP,OAAO,CAACQ,WAAW;UAE3CJ,OAAO,gBACLrB,OAAA,CAACF,WAAW;YACV4B,KAAK,EAAEF,eAAe,CAACE,KAAM;YAC7BC,QAAQ,EAAEH,eAAe,CAACI,OAAQ;YAClCC,IAAI,EAAEL,eAAe,CAACK,IAAK;YAC3BC,QAAQ,EAAEN,eAAe,CAACO,KAAK,CAACC,IAAI,CAACC;UAAa;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CACF;UACD;QACF,KAAK,kBAAkB;UACrB,MAAMqB,qBAAqB,GAAGjB,OAAO,CAACiB,qBAAqB;UAC3DC,OAAO,CAACC,GAAG,CAACF,qBAAqB,CAAC;UAElCb,OAAO,gBACLrB,OAAA,CAACqC,kBAAkB;YAACR,IAAI,EAAEK,qBAAqB,CAACL,IAAK;YAACS,QAAQ,EAAEC,cAAc,CAACb;UAAM;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACxF;UACD;MACJ;MAEA,oBACEb,OAAA;QAAiBwC,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAhC,QAAA,EAE9CY;MAAO,GAFAF,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAzDID,eAAe;EAAA,QACFN,SAAS,EAGOC,QAAQ;AAAA;AAAA8C,EAAA,GAJrCzC,eAAe;AA2DrB,eAAeA,eAAe;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}